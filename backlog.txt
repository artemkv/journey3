!! Session version

- --Send old stage with head, and both new and old with tail--


!! Flutter Prototype

- --Do not send firstLaunchThisXXX etc. with Session tail--
- --Send old stage with head, and both new and old with tail--
- --Report crashes--
- --Refactor the code and make Journey non-static--

!! Android Native Prototype

!! Web Node Prototype

- Implement
- Use with notedok


!! Flutter Library

- --Cover with unit-tests--
- --Publish to public repo--


!! Android Native Prototype

- Cover with unit-tests
- --Publish to Maven--


!! Ingest Service

- --Remove deprecated session endpoint--
- --Validation accounts--


!! Calc Service

- --Set TTL when storing sessions--
- Prevent 1 metric failed from failing the whole session
- (!) Implement limit of 100 sessions per account
- (!) Implement limits for number of unique events
- --Update the sort key for sessions--
- --Conversions only counted on tail, I need to count new users on head--
- --Session duration distribution--


!! Web UI

- Do I want Release/Debug to be case-sensitive in query string?
- Start loading data only after apps are pre-filled
- --Date/time selector--
- --Prev/next day/month/year--
- --Filter by build--
- --Show totals for all charts--
- --Cumulative or not, depending on the chart--
- --Good labels for tooltips--
- --Quick way to split by version--
- --Supply filter options for todays segments--
- --Retention in %--
- --Bucket user segments by week--
- --Session list, with filter by error/crash and version, showing events--
- --Sort events by name on filter form--
- (F) Remember filters
- (F) Show unique users by version histograms with unique users total
- (F) Show unique users dashed on new users chart
- (F) Save current filters
- (F) Events histograms
- (F) Share stats with other people
- (F) Allow editing metadata (stages)


!! Doc

- Unique users: user that comes the same day with 2 different versions will only be count on the first version seen
- Sessions by event: the same session will be counted as many times as events selected, can be "double-counted"